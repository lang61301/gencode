#parse("template/velocity/fun.vm")
package ${webActionFullPackageName};


/**
 * autogen
 * @author paddingdun
 * ${table.tableCommon} spring web controller;
 * @date ${date}
 */
@org.springframework.stereotype.Controller
@org.springframework.web.bind.annotation.RequestMapping("${webActionRequestMapping}")
public class ${springWebActionJavaClassName} {
	
	@org.springframework.beans.factory.annotation.Autowired
	private ${serviceFullPackageName}.${sqlMapIServiceJavaClassName} service;
	
	/**
	 * 主页;
	 * @return
	 */
	@org.springframework.web.bind.annotation.RequestMapping
	public String index() {
		return "${springJspViewResolverMiddleFullPath}";
	}

	/**
	 * paging query by parameters;
	 * @param obj
	 * @param paging
	 * @return
	 */
	@org.springframework.web.bind.annotation.RequestMapping(value="/${queryPagingMethodPrefix}", method = org.springframework.web.bind.annotation.RequestMethod.POST)
	@org.springframework.web.bind.annotation.ResponseBody
	public ${jsonResultPackageName}.JsonResult2<${idataCollectionPackageName}.IDataCollection<${pojoFullPackageName}.${table.entityBeanName}>> ${queryPagingMethodPrefix}(${pojoFullPackageName}.${table.entityBeanName} obj, ${pagingPackageName}.Paging paging) {
		${jsonResultPackageName}.JsonResult2<${idataCollectionPackageName}.IDataCollection<${pojoFullPackageName}.${table.entityBeanName}>> jr = new ${jsonResultPackageName}.JsonResult2<${idataCollectionPackageName}.IDataCollection<${pojoFullPackageName}.${table.entityBeanName}>>();
		try{
			${idataCollectionPackageName}.IDataCollection<${pojoFullPackageName}.${table.entityBeanName}> data = service.${queryPagingMethodPrefix}${table.entityBeanName}(obj, paging);
			jr.setData(data);
		}catch(${businessExceptionPackageName}.BusinessException e){
			jr.setStatus(${ierrorCodePackageName}.IErrorCode.UNKNOW_EXCEPTION);
			jr.setMsg(e.getMessage());
		}catch(java.lang.Exception e){
			jr.setStatus(${ierrorCodePackageName}.IErrorCode.UNKNOW_EXCEPTION);
			jr.setMsg("查询异常");
			e.printStackTrace();
		}
		return jr;
	}
	
	/**
	 * new or edit;
	 * @param obj
	 * @return
	 */
	@org.springframework.web.bind.annotation.RequestMapping(value="/${webActionEditMethodName}", method = org.springframework.web.bind.annotation.RequestMethod.POST)
	@org.springframework.web.bind.annotation.ResponseBody
	public ${jsonResultPackageName}.JsonResult2<${pojoFullPackageName}.${table.entityBeanName}> ${webActionEditMethodName}(${pojoFullPackageName}.${table.entityBeanName} obj) {
		${jsonResultPackageName}.JsonResult2<${pojoFullPackageName}.${table.entityBeanName}> jr = new ${jsonResultPackageName}.JsonResult2<${pojoFullPackageName}.${table.entityBeanName}>();
		try{
			#set($objName="obj")
			boolean save = #pks_isnull(${table.columns} ${objName})
			if(save){
				service.${saveMethodPrefix}${table.entityBeanName}(obj);
			}else{
				service.${updateMethodPrefix}${table.entityBeanName}(obj);
			}
			jr.setMsg("保存成功!");
		}catch(${businessExceptionPackageName}.BusinessException e){
			jr.setStatus(${ierrorCodePackageName}.IErrorCode.UNKNOW_EXCEPTION);
			jr.setMsg(e.getMessage());
		}catch(java.lang.Exception e){
			jr.setStatus(${ierrorCodePackageName}.IErrorCode.UNKNOW_EXCEPTION);
			jr.setMsg("保存异常");
			e.printStackTrace();
		}
		return jr;
	}
	
	/**
	 * get object;
	 */
	@org.springframework.web.bind.annotation.RequestMapping(value="/${getMethodPrefix}")
	@org.springframework.web.bind.annotation.ResponseBody
	public ${jsonResultPackageName}.JsonResult2<${pojoFullPackageName}.${table.entityBeanName}> ${getMethodPrefix}(#pks_web_argument(${table.columns} ${sqlMapMarkUse})) {
		${jsonResultPackageName}.JsonResult2<${pojoFullPackageName}.${table.entityBeanName}> jr = new ${jsonResultPackageName}.JsonResult2<${pojoFullPackageName}.${table.entityBeanName}>();
		try{
			${pojoFullPackageName}.${table.entityBeanName} obj = service.${getMethodPrefix}${table.entityBeanName}(#pks_call_argument(${table.columns} ${sqlMapMarkUse}));
			jr.setData(obj);
		}catch(${businessExceptionPackageName}.BusinessException e){
			jr.setStatus(${ierrorCodePackageName}.IErrorCode.UNKNOW_EXCEPTION);
			jr.setMsg(e.getMessage());
		}catch(java.lang.Exception e){
			jr.setStatus(${ierrorCodePackageName}.IErrorCode.UNKNOW_EXCEPTION);
			jr.setMsg("获取对象异常");
			e.printStackTrace();
		}
		return jr;
	}
	
	/**
	 * delete object
	 */
	@org.springframework.web.bind.annotation.RequestMapping(value="/${deleteMethodPrefix}")
	@org.springframework.web.bind.annotation.ResponseBody
	public ${jsonResultPackageName}.JsonResult2<java.lang.Void> ${deleteMethodPrefix}(#pks_web_argument(${table.columns} ${sqlMapMarkUse})) {
		${jsonResultPackageName}.JsonResult2<java.lang.Void> jr = new ${jsonResultPackageName}.JsonResult2<java.lang.Void>();
		try{
			service.${deleteMethodPrefix}${table.entityBeanName}(#pks_call_argument(${table.columns} ${sqlMapMarkUse}));
			jr.setMsg("删除成功!");
		}catch(${businessExceptionPackageName}.BusinessException e){
			jr.setStatus(${ierrorCodePackageName}.IErrorCode.UNKNOW_EXCEPTION);
			jr.setMsg(e.getMessage());
		}catch(java.lang.Exception e){
			jr.setStatus(${ierrorCodePackageName}.IErrorCode.UNKNOW_EXCEPTION);
			jr.setMsg("删除对象异常");
			e.printStackTrace();
		}
		return jr;
	}

}
