/**
 * 
 */
package ${webActionFullPackageName};
#parse("template/velocity/fun.vm")
/**
 * autogen
 * @author paddingdun
 * ${entity.tableCommon} spring web controller;
 * @date ${date}
 */
@org.springframework.stereotype.Controller
@org.springframework.web.bind.annotation.RequestMapping("${webActionRequestMapping}")
public class ${springWebActionJavaClassName} extends ${baseCtrlPackageName}.BaseCtrl {

	/**
	 * ${springWebActionJavaClassName} log variant;
	 */
	private final static ${logHelperPackageName}.LogHelper logger = ${logHelperPackageName}.LogHelper.getLogger(${springWebActionJavaClassName}.class);
	
	@org.springframework.beans.factory.annotation.Autowired
	private ${serviceFullPackageName}.${sqlMapIServiceJavaClassName} service;
	
	/**
	 * index;
	 * @return
	 */
	#if(${entity.showPermission})
	@org.apache.shiro.authz.annotation.RequiresPermissions("${entity.queryPermission}")
	#end
	@org.springframework.web.bind.annotation.RequestMapping
	public String index() {
		return "${springListJspViewResolverMiddleFullPath}";
	}

	/**
	 * paging query by parameters;
	 * @param obj
	 * @param paging
	 * @return
	 */
	@org.springframework.web.bind.annotation.RequestMapping(value="/${queryPagingMethodPrefix}", method = org.springframework.web.bind.annotation.RequestMethod.POST)
	@org.springframework.web.bind.annotation.ResponseBody
	public ${jsonResultPackageName}.JsonResult2<${idataCollectionPackageName}.IDataCollection<java.util.Map<java.lang.String, java.lang.Object>>> ${queryPagingMethodPrefix}(${pojoFullPackageName}.${entity.entityBeanName} obj, ${pagingPackageName}.Paging paging) {
		${jsonResultPackageName}.JsonResult2<${idataCollectionPackageName}.IDataCollection<java.util.Map<java.lang.String, java.lang.Object>>> jr = new ${jsonResultPackageName}.JsonResult2<${idataCollectionPackageName}.IDataCollection<java.util.Map<java.lang.String, java.lang.Object>>>();
		try{
			${idataCollectionPackageName}.IDataCollection<java.util.Map<java.lang.String, java.lang.Object>> data = service.${queryPagingMethodPrefix}${entity.entityBeanName}(obj, paging);
			jr.setData(data);
		}catch(${businessExceptionPackageName}.BusinessException e){
			jr.setStatus(${ierrorCodePackageName}.IErrorCode.UNKNOW_EXCEPTION);
			jr.setMsg(e.getMessage());
		}catch(java.lang.Exception e){
			jr.setStatus(${ierrorCodePackageName}.IErrorCode.UNKNOW_EXCEPTION);
			jr.setMsg("查询异常");
			e.printStackTrace();
		}
		return jr;
	}
	
	/**
	 * to new or edit;
	 * @return
	 */
	#if(${entity.showPermission})
	@org.apache.shiro.authz.annotation.RequiresPermissions("${entity.editPermission}")
	#end
	@org.springframework.web.bind.annotation.RequestMapping(value = "/${webActionToEditMethodName}", method = org.springframework.web.bind.annotation.RequestMethod.GET)
	public String ${webActionToEditMethodName}(javax.servlet.http.HttpServletRequest request, #pks_web_argument1(${entity.tableColumns})) {
		${pojoFullPackageName}.${entity.entityBeanName} obj = new ${pojoFullPackageName}.${entity.entityBeanName}();
		boolean add_flag = #pks_argus_isnull(${entity.key})
		//to new;
		if(add_flag){
		//to edit;
		}else{
			obj = service.${getMethodPrefix}${entity.entityBeanName}(${entity.key.propertyName});
		}
		request.setAttribute("obj", obj);
		return "${springJspViewResolverMiddleFullPath}";
	}
	
	/**
	 * new or edit;
	 * @param obj
	 * @return
	 */
	#if(${entity.showPermission})
	@org.apache.shiro.authz.annotation.RequiresPermissions("${entity.editPermission}")
	#end
	@org.springframework.web.bind.annotation.RequestMapping(value="/${webActionEditMethodName}", method = org.springframework.web.bind.annotation.RequestMethod.POST)
	@org.springframework.web.bind.annotation.ResponseBody
	public ${jsonResultPackageName}.JsonResult2<java.lang.Void> ${webActionEditMethodName}(${pojoFullPackageName}.${entity.entityBeanName} obj) {
		${jsonResultPackageName}.JsonResult2<java.lang.Void> jr = new ${jsonResultPackageName}.JsonResult2<java.lang.Void>();
		try{
			#set($objName="obj")
			boolean save = #pks_isnull(${entity.tableColumns} ${objName})
			if(save){
				service.${saveMethodPrefix}${entity.entityBeanName}(obj);
			}else{
				service.${updateMethodPrefix}${entity.entityBeanName}(obj);
			}
			jr.setMsg("保存成功!");
		}catch(${businessExceptionPackageName}.BusinessException e){
			jr.setStatus(${ierrorCodePackageName}.IErrorCode.UNKNOW_EXCEPTION);
			jr.setMsg(e.getMessage());
		}catch(java.lang.Exception e){
			jr.setStatus(${ierrorCodePackageName}.IErrorCode.UNKNOW_EXCEPTION);
			jr.setMsg("保存异常");
			e.printStackTrace();
		}
		return jr;
	}
	
	/**
	 * get object;
	 */
	@org.springframework.web.bind.annotation.RequestMapping(value="/${getMethodPrefix}")
	@org.springframework.web.bind.annotation.ResponseBody
	public ${jsonResultPackageName}.JsonResult2<${pojoFullPackageName}.${entity.entityBeanName}> ${getMethodPrefix}(#pks_web_argument(${entity.tableColumns})) {
		${jsonResultPackageName}.JsonResult2<${pojoFullPackageName}.${entity.entityBeanName}> jr = new ${jsonResultPackageName}.JsonResult2<${pojoFullPackageName}.${entity.entityBeanName}>();
		try{
			${pojoFullPackageName}.${entity.entityBeanName} obj = service.${getMethodPrefix}${entity.entityBeanName}(#pks_call_argument(${entity.tableColumns}));
			jr.setData(obj);
		}catch(${businessExceptionPackageName}.BusinessException e){
			jr.setStatus(${ierrorCodePackageName}.IErrorCode.UNKNOW_EXCEPTION);
			jr.setMsg(e.getMessage());
		}catch(java.lang.Exception e){
			jr.setStatus(${ierrorCodePackageName}.IErrorCode.UNKNOW_EXCEPTION);
			jr.setMsg("获取对象异常");
			e.printStackTrace();
		}
		return jr;
	}
	
	/**
	 * delete object
	 */
	#if(${entity.showPermission})
	@org.apache.shiro.authz.annotation.RequiresPermissions("${entity.editPermission}")
	#end
	@org.springframework.web.bind.annotation.RequestMapping(value="/${deleteMethodPrefix}")
	@org.springframework.web.bind.annotation.ResponseBody
	public ${jsonResultPackageName}.JsonResult2<java.lang.Void> ${deleteMethodPrefix}(#pks_web_argument_array(${entity.tableColumns})) {
		${jsonResultPackageName}.JsonResult2<java.lang.Void> jr = new ${jsonResultPackageName}.JsonResult2<java.lang.Void>();
		try{
			service.${deleteMethodPrefix}${entity.entityBeanName}(#pks_call_argument(${entity.tableColumns}));
			jr.setMsg("删除成功!");
		}catch(${businessExceptionPackageName}.BusinessException e){
			jr.setStatus(${ierrorCodePackageName}.IErrorCode.UNKNOW_EXCEPTION);
			jr.setMsg(e.getMessage());
		}catch(java.lang.Exception e){
			jr.setStatus(${ierrorCodePackageName}.IErrorCode.UNKNOW_EXCEPTION);
			jr.setMsg("删除对象异常");
			e.printStackTrace();
		}
		return jr;
	}

}
