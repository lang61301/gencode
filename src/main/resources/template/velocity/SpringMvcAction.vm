/**
 * 
 */
package ${webActionFullPackageName};
#parse("template/velocity/fun.vm")

import org.springframework.beans.factory.annotation.Autowired;
import ${serviceFullPackageName}.${sqlMapIServiceJavaClassName};
import ${baseCtrlPackageName}.BaseCtrl;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import ${jsonResultPackageName}.JsonResult2;
import ${idataCollectionPackageName}.IDataCollection;
import ${pojoFullPackageName}.${entity.entityBeanName};
import ${pagingPackageName}.Paging;
import ${businessExceptionPackageName}.BusinessException;
import ${ierrorCodePackageName}.IErrorCode;

import java.util.Map;
import javax.servlet.http.HttpServletRequest;

/**
 * @author paddingdun
 * ${entity.tableCommon} spring web controller;
 * @date ${date}
 */
@org.springframework.stereotype.Controller
@RequestMapping("${webActionRequestMapping}")
public class ${springWebActionJavaClassName} extends BaseCtrl {

	/**
	 * ${springWebActionJavaClassName} log 变量;
	 */
	private final static ${logHelperPackageName}.LogHelper logger = ${logHelperPackageName}.LogHelper.getLogger(${springWebActionJavaClassName}.class);
	
	@Autowired
	private ${sqlMapIServiceJavaClassName} service;
	
	/**
	 * index;
	 * @return
	 */
	#if(${entity.showPermission})
	@org.apache.shiro.authz.annotation.RequiresPermissions("${entity.queryPermission}")
	#end
	@RequestMapping("/list")
	public String list() {
		return "${springListJspViewResolverMiddleFullPath}";
	}

	/**
	 * paging query by parameters;
	 * @param obj
	 * @param paging
	 * @return
	 */
	@RequestMapping(value="/queryPaging", method = RequestMethod.POST)
	@ResponseBody
	public JsonResult2<IDataCollection<Map<String, Object>>> queryPaging(${entity.entityBeanName} obj, Paging paging) {
		JsonResult2<IDataCollection<Map<String, Object>>> jr = new JsonResult2<IDataCollection<Map<String, Object>>>();
		try{
			IDataCollection<java.util.Map<String, Object>> data = service.queryPaging(obj, paging);
			jr.setData(data);
		}catch(BusinessException e){
			jr.setStatus(IErrorCode.UNKNOW_EXCEPTION);
			jr.setMsg(e.getMessage());
		}catch(Exception e){
			jr.setStatus(IErrorCode.UNKNOW_EXCEPTION);
			jr.setMsg("查询异常");
			e.printStackTrace();
		}
		return jr;
	}
	
	/**
	 * to new or edit;
	 * @return
	 */
	#if(${entity.showPermission})
	@org.apache.shiro.authz.annotation.RequiresPermissions("${entity.editPermission}")
	#end
	@RequestMapping(value = "/toEdit", method = RequestMethod.GET)
	public String toEdit(HttpServletRequest request, #pks_web_argument1(${entity.tableColumns})) {
		${entity.entityBeanName} obj = new ${entity.entityBeanName}();
		boolean add_flag = #pks_argus_isnull(${entity.key})
		//to new;
		if(add_flag){
		//to edit;
		}else{
			obj = service.get(${entity.key.propertyName});
		}
		request.setAttribute("obj", obj);
		return "${springJspViewResolverMiddleFullPath}";
	}
	
	/**
	 * new or edit;
	 * @param obj
	 * @return
	 */
	#if(${entity.showPermission})
	@org.apache.shiro.authz.annotation.RequiresPermissions("${entity.editPermission}")
	#end
	@RequestMapping(value="/edit", method = RequestMethod.POST)
	@ResponseBody
	public JsonResult2<Void> edit(${entity.entityBeanName} obj) {
		JsonResult2<Void> jr = new JsonResult2<Void>();
		try{
			#set($objName="obj")
			boolean save = #pks_isnull(${entity.tableColumns} ${objName})
			if(save){
				service.save(obj);
			}else{
				service.update(obj);
			}
			jr.setMsg("保存成功!");
		}catch(BusinessException e){
			jr.setStatus(IErrorCode.UNKNOW_EXCEPTION);
			jr.setMsg(e.getMessage());
		}catch(java.lang.Exception e){
			jr.setStatus(IErrorCode.UNKNOW_EXCEPTION);
			jr.setMsg("保存异常");
			e.printStackTrace();
		}
		return jr;
	}
	
	/**
	 * get object;
	 */
	@RequestMapping(value="/get")
	@ResponseBody
	public JsonResult2<${entity.entityBeanName}> get(#pks_web_argument(${entity.tableColumns})) {
		JsonResult2<${entity.entityBeanName}> jr = new JsonResult2<${entity.entityBeanName}>();
		try{
			${entity.entityBeanName} obj = service.get(#pks_call_argument(${entity.tableColumns}));
			jr.setData(obj);
		}catch(BusinessException e){
			jr.setStatus(IErrorCode.UNKNOW_EXCEPTION);
			jr.setMsg(e.getMessage());
		}catch(java.lang.Exception e){
			jr.setStatus(IErrorCode.UNKNOW_EXCEPTION);
			jr.setMsg("获取对象异常");
			e.printStackTrace();
		}
		return jr;
	}
	
	/**
	 * delete object
	 */
	#if(${entity.showPermission})
	@org.apache.shiro.authz.annotation.RequiresPermissions("${entity.editPermission}")
	#end
	@RequestMapping(value="/delete")
	@ResponseBody
	public JsonResult2<Void> delete(#pks_web_argument_array(${entity.tableColumns})) {
		JsonResult2<Void> jr = new JsonResult2<Void>();
		try{
			service.delete(#pks_call_argument(${entity.tableColumns}));
			jr.setMsg("删除成功!");
		}catch(BusinessException e){
			jr.setStatus(IErrorCode.UNKNOW_EXCEPTION);
			jr.setMsg(e.getMessage());
		}catch(java.lang.Exception e){
			jr.setStatus(IErrorCode.UNKNOW_EXCEPTION);
			jr.setMsg("删除对象异常");
			e.printStackTrace();
		}
		return jr;
	}

}
