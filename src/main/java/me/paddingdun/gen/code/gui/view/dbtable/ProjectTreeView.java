/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package me.paddingdun.gen.code.gui.view.dbtable;

import java.awt.BorderLayout;
import java.awt.EventQueue;
import java.util.concurrent.Callable;

import javax.swing.event.TreeSelectionEvent;
import javax.swing.event.TreeSelectionListener;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;

import me.paddingdun.gen.code.data.message.Message;
import me.paddingdun.gen.code.data.project.EntityInfo;
import me.paddingdun.gen.code.data.project.ProjectInfo;
import me.paddingdun.gen.code.gui.model.ProjectTreeViewModel;
import me.paddingdun.gen.code.gui.perspective.designer.DesignerPerspective;
import me.paddingdun.gen.code.gui.view.AbstractView;
import me.paddingdun.gen.code.util.ProjectHelper;
import me.paddingdun.gen.code.util.gui.TaskHelper;

/**
 * 已经生成过配置文件的树;
 * @author paddingdun
 *
 * 2016年4月29日
 * @since 2.0
 * @version 2.0
 */
@SuppressWarnings("serial")
public class ProjectTreeView extends  AbstractView {
	
	private DesignerPerspective perspective;
	
	private ProjectTreeViewModel model;

    /**
     * Creates new form TableTreeFrame
     */
    public ProjectTreeView(DesignerPerspective perspective) {
    	super();
    	this.perspective = perspective;
    	initModel();
        initComponents();
    }
    
    private void initModel(){
    	model = new ProjectTreeViewModel();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("工程");
        
        sp = new javax.swing.JScrollPane();
        tableTree = new javax.swing.JTree(new DefaultMutableTreeNode());
        spp = new javax.swing.JSplitPane();
        pane = new javax.swing.JPanel();
        btnRefresh = new javax.swing.JButton();
        
        btnRefresh.setText("刷新");
        
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });

        this.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                afterShow(evt);
            }
        });
        spp.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);
        spp.setLeftComponent(sp);
        sp.setViewportView(tableTree);
        
        spp.setBottomComponent(pane);
        
        pane.setLayout(new BorderLayout());
        pane.add(btnRefresh, BorderLayout.WEST);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(spp, javax.swing.GroupLayout.DEFAULT_SIZE, 394, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(spp, javax.swing.GroupLayout.DEFAULT_SIZE, 278, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void afterShow(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_afterShow
    	spp.setDividerLocation(0.9);
    	tableTree.addTreeSelectionListener(new TreeSelectionListener() {
			
			public void valueChanged(TreeSelectionEvent e) {
				Object[] objs = e.getPath().getPath();
				DefaultMutableTreeNode node = (DefaultMutableTreeNode)objs[objs.length - 1];
				if(node.isLeaf()){
					Object uo = node.getUserObject();
					if( uo instanceof EntityInfo){
						Message m = new Message(DesignerPerspective.MESSAGE_CLICK_PROJECT_TREE_NODE);
						m.setSource(ProjectTreeView.this);
						m.setObject(uo);
						perspective.sendMessage(m);
					}
				}
			}
		});

//    	btnRefreshActionPerformed(null);
    	
    }//GEN-LAST:event_afterShow
    
    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {
    	TaskHelper.runInNonEDT(new Callable<Void>() {
			public Void call() throws Exception {
				ProjectInfo pi = ProjectHelper.getCurrent();
				if(pi != null){
					openProject(pi.getProjectName());
				}
				return null;
			}
		});
    }
    
    private void openProject(final String pName){
    	TaskHelper.runInNonEDT(new Callable<Void>() {
			public Void call() throws Exception {
				model.setRootNode(ProjectHelper.projectTreeNode(pName));
				
				final DefaultTreeModel tm = new DefaultTreeModel(model.getRootNode());
				EventQueue.invokeLater(new Runnable() {
					public void run() {
						tableTree.setModel(tm);
					}
				});
				return null;
			}
		});
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSplitPane spp;
    private javax.swing.JPanel pane;
    private javax.swing.JScrollPane sp;
    private javax.swing.JTree tableTree;
    private javax.swing.JButton btnRefresh;
    
    // End of variables declaration//GEN-END:variables

	/* (non-Javadoc)
	 * @see me.paddingdun.gen.code.gui.view.AbstractView#doMessage(me.paddingdun.gen.code.data.message.Message)
	 */
	@Override
	public void doMessage(Message message) {
		String name = message.getName();
		//打开工程;
		if(DesignerPerspective.MESSAGE_OPEN_PROJECT.equals(name)){
			String pName = (String)message.getObject();
			openProject(pName);
		}
	}
}
